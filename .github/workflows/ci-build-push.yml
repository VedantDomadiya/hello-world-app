name: CI - Build and Push Docker Image

on:
  push:
    branches:
      - main # Or other branches you want to build from

env:
  AWS_REGION: ap-south-1
  # Get ECR Repo Name from Terraform outputs or hardcode if stable
  ECR_REPOSITORY: hello-world-app
  # ECR Registry will be determined dynamically by aws-actions/amazon-ecr-login

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Needed for checkout
      id-token: write # Needed for configure-aws-credentials with OIDC (recommended) or use secrets

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Recommended: Configure AWS Credentials using OIDC
    # See: https://github.com/aws-actions/configure-aws-credentials#configure-aws-credentials-action-for-github-actions
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # Use latest version
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2 # Use latest version

    - name: Debug Variables
      run: |
        echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}"
        echo "ECR_REPOSITORY=${{ env.ECR_REPOSITORY }}"
        echo "IMAGE_TAG=${{ github.sha }}"
        echo "--- Listing files ---"
        ls -la # Verify Dockerfile is in the current directory

    - name: Build and push image to Amazon ECR using buildx
      id: build-image
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }} # Use the commit SHA as the unique image tag
      run: |
          docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --push .
          echo "Pushed image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    # --- Trigger CD Workflow ---
    - name: Trigger CD Workflow
      if: success()
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.CD_TRIGGER_TOKEN }}
        repository: VedantDomadiya/hello-world-infra
        event-type: new-image-build
        client-payload: '{ "image_tag": "${{ github.sha }}", "environment_config": "dev" }' # <--- ADDED "environment_config": "dev"